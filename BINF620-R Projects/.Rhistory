ggplot(raceFiltered, aes(x = RACE)) +
geom_bar(fill = "steelblue") +
labs(title = "Distribution of Racial Categories",
x = "Race",
y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
raceFiltered$MHealthConcern <- factor(
ifelse(raceFiltered$K2Q33B == 1 | raceFiltered$K2Q32B == 1, "Yes", "No"),
levels = c("No", "Yes")
)
ggplot(raceFiltered, aes(x = RACE, fill = MHealthConcern)) +
geom_bar(position = "fill") +
labs(title = "Mental Health Concerns by Race",
x = "Race",
y = "Proportion",
fill = "Mental Health Concern") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
raceFiltered <- raceFiltered %>% filter(age3_22 == 3)
ggplot(raceFiltered, aes(x = RACE, fill = MHealthConcern)) +
geom_bar(position = "fill") +
labs(title = "Mental Health Concerns by Race",
x = "Race",
y = "Proportion",
fill = "Mental Health Concern") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
raceFiltered <- raceFiltered %>% filter(age3_22 == 2)
ggplot(raceFiltered, aes(x = RACE, fill = MHealthConcern)) +
geom_bar(position = "fill") +
labs(title = "Mental Health Concerns by Race | Age Group 2",
x = "Race",
y = "Proportion",
fill = "Mental Health Concern") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
## Race Factors
raceFacotrs <- c("INQ_RESSEG", "INQ_EDU", "INQ_EMPLOY", "INQ_INCOME", "INQ_HOME",
"race4_22", "raceASIA_22", "race7_22", "SC_ASIAN", "SC_AIAN",
"SC_NHPI", "SC_RACE_R", "SC_HISPANIC_R", "K2Q32B", "K2Q33B", "age3_22")
raceFiltered <- rawData[, raceFacotrs]
raceFiltered$RACE <- factor(raceFiltered$SC_RACE_R,
levels = c(1, 2, 3, 4, 5, 7),
labels = c("White alone",
"Black or African American alone",
"American Indian or Alaska Native alone",
"Asian alone",
"Native Hawaiian and Other Pacific Islander alone",
"Two or More Races"))
raceFiltered <- raceFiltered %>% filter(age3_22 == 2)
ggplot(raceFiltered, aes(x = RACE, fill = MHealthConcern)) +
geom_bar(position = "fill") +
labs(title = "Mental Health Concerns by Race | Age Group 2",
x = "Race",
y = "Proportion",
fill = "Mental Health Concern") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
raceFiltered <- rawData[, raceFacotrs]
raceFiltered$RACE <- factor(raceFiltered$SC_RACE_R,
levels = c(1, 2, 3, 4, 5, 7),
labels = c("White alone",
"Black or African American alone",
"American Indian or Alaska Native alone",
"Asian alone",
"Native Hawaiian and Other Pacific Islander alone",
"Two or More Races"))
ggplot(raceFiltered, aes(x = RACE)) +
geom_bar(fill = "steelblue") +
labs(title = "Distribution of Racial Categories",
x = "Race",
y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
raceFiltered$MHealthConcern <- factor(
ifelse(raceFiltered$K2Q33B == 1 | raceFiltered$K2Q32B == 1, "Yes", "No"),
levels = c("No", "Yes")
)
raceFiltered <- raceFiltered %>% filter(age3_22 == 2)
ggplot(raceFiltered, aes(x = RACE, fill = MHealthConcern)) +
geom_bar(position = "fill") +
labs(title = "Mental Health Concerns by Race | Age Group 2",
x = "Race",
y = "Proportion",
fill = "Mental Health Concern") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
raceFiltered <- rawData[, raceFacotrs]
raceFiltered$RACE <- factor(raceFiltered$SC_RACE_R,
levels = c(1, 2, 3, 4, 5, 7),
labels = c("White alone",
"Black or African American alone",
"American Indian or Alaska Native alone",
"Asian alone",
"Native Hawaiian and Other Pacific Islander alone",
"Two or More Races"))
ggplot(raceFiltered, aes(x = RACE)) +
geom_bar(fill = "steelblue") +
labs(title = "Distribution of Racial Categories",
x = "Race",
y = "Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
raceFiltered$MHealthConcern <- factor(
ifelse(raceFiltered$K2Q33B == 1 | raceFiltered$K2Q32B == 1, "Yes", "No"),
levels = c("No", "Yes")
)
raceFiltered <- raceFiltered %>% filter(age3_22 == 3)
ggplot(raceFiltered, aes(x = RACE, fill = MHealthConcern)) +
geom_bar(position = "fill") +
labs(title = "Mental Health Concerns by Race | Age Group 3",
x = "Race",
y = "Proportion",
fill = "Mental Health Concern") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
currentFilter <- c("anxiety_22", "depress_22", "SC_RACE_R", "hrsareg", "age3_22", "AnxietSev_22", "DepresSev_22")
currData <- filteredData[, currentFilter]
currentFilter <- c("anxiety_22", "depress_22", "SC_RACE_R", "hrsareg", "age3_22", "AnxietSev_22", "DepresSev_22")
currData <- filteredData[, currentFilter]
currData$RACE <- factor(currData$SC_RACE_R,
levels = c(1, 2, 3, 4, 5, 7),
labels = c("White alone",
"Black or African American alone",
"American Indian or Alaska Native alone",
"Asian alone",
"Native Hawaiian and Other Pacific Islander alone",
"Two or More Races"))
currData$MHealthConcern <- factor(
ifelse(currData$anxiety_22 == 1 | currData$depress_22 == 1, "Yes", "No"),
levels = c("No", "Yes"))
View(currData)
currData$MHealthConcern_parent <- factor(
ifelse(currData$AnxietSev_22 == 1 | currData$DepresSev_22 == 1, "Yes", "No"),
levels = c("No", "Yes"))
plot_data <- currData %>%
group_by(SC_RACE_R_CAT, MHealthConcern, MHealthConcern_parent) %>%
summarise(count = n()) %>%
group_by(SC_RACE_R_CAT) %>%
mutate(prop = count / sum(count)) %>%
ungroup()
plot_data <- currData %>%
group_by(RACE, MHealthConcern, MHealthConcern_parent) %>%
summarise(count = n()) %>%
group_by(RACE) %>%
mutate(prop = count / sum(count)) %>%
ungroup()
# Create a long-format dataframe for easier plotting
plot_data_long <- plot_data %>%
pivot_longer(cols = c(MHealthConcern, MHealthConcern_parent),
names_to = "Concern_Type",
values_to = "Concern_Status")
plot_data <- currData %>%
group_by(RACE, MHealthConcern, MHealthConcern_parent) %>%
summarise(count = n()) %>%
group_by(RACE) %>%
mutate(prop = count / sum(count)) %>%
ungroup()
# Create a long-format dataframe for easier plotting
plot_data_long <- plot_data %>%
pivot_longer(cols = c(MHealthConcern, MHealthConcern_parent),
names_to = "Concern_Type",
values_to = "Concern_Status")
library(ggplot2)
library(dplyr)
library(tidyr)
plot_data <- currData %>%
group_by(RACE, MHealthConcern, MHealthConcern_parent) %>%
summarise(count = n()) %>%
group_by(RACE) %>%
mutate(prop = count / sum(count)) %>%
ungroup()
# Create a long-format dataframe for easier plotting
plot_data_long <- plot_data %>%
pivot_longer(cols = c(MHealthConcern, MHealthConcern_parent),
names_to = "Concern_Type",
values_to = "Concern_Status")
# Plot
ggplot(plot_data_long, aes(x = RACE, y = prop, fill = interaction(Concern_Type, Concern_Status))) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Mental Health Concerns by Race: Child vs Parent Reporting",
x = "Race",
y = "Proportion",
fill = "Concern Type") +
scale_fill_manual(
values = c("MHealthConcern.No" = "lightblue",
"MHealthConcern.Yes" = "blue",
"MHealthConcern_parent.No" = "lightgreen",
"MHealthConcern_parent.Yes" = "darkgreen"),
labels = c("Child No Concern", "Child Concern",
"Parent No Concern", "Parent Concern")
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scales::percent_format())
# Alternative visualization - side-by-side comparison
ggplot(plot_data_long, aes(x = RACE, y = prop, fill = Concern_Status)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Concern_Type, labeller = labeller(
Concern_Type = c("MHealthConcern" = "Child-Reported",
"MHealthConcern_parent" = "Parent-Reported")
)) +
labs(title = "Mental Health Concerns by Race: Child vs Parent Reporting",
x = "Race",
y = "Proportion",
fill = "Concern Status") +
scale_fill_manual(values = c("No" = "lightblue", "Yes" = "blue")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scales::percent_format())
# Chi-square test to check statistical significance
library(stats)
chisq_child <- chisq.test(table(currData$RACE, currData$MHealthConcern))
chisq_parent <- chisq.test(table(currData$RACE, currData$MHealthConcern_parent))
print("Chi-square test for child-reported mental health concerns:")
print(chisq_child)
print("Chi-square test for parent-reported mental health concerns:")
print(chisq_parent)
View(plot_data)
currentFilter <- c("K2Q33A", "K2Q32A", "SC_RACE_R", "sex_22", "SC_AGE_YEARS")
currData <- filteredData[, currentFilter]
currData$SC_RACE_R <- as.factor(currData$SC_RACE_R)
currData$sex_22 <- as.factor(currData$sex_22)
currData$MHealthConcern <- factor(
ifelse(currData$K2Q33A == 1 | currData$K2Q32A == 1, "Yes", "No"),
levels = c("No", "Yes"))
model <- "MHealthConcern ~ SC_RACE_R + sex_22 + SC_AGE_YEARS"
logistic_model <- glm(
MHealthConcern ~ SC_RACE_R + sex_22 + SC_AGE_YEARS,
data = currData,
family = binomial()
)
summary(logistic_model)
library(broom)
# Tidy output with odds ratios and confidence intervals
tidy_model <- tidy(logistic_model, conf.int = TRUE, exponentiate = TRUE)
print(tidy_model)
library(pscl)
install.packages("pscl")
library(pscl)
pR2 <- pR2(logistic_model)
print(pR2)
# Model fit assessment
# Likelihood Ratio Test
anova(logistic_model, test = "LRT")
# Check for multicollinearity
library(car)
vif_values <- vif(logistic_model)
print("Variance Inflation Factors:")
print(vif_values)
# Prediction and model performance
# Predict probabilities
currData$predicted_prob <- predict(logistic_model, type = "response")
# Classification table
library(caret)
predicted_classes <- ifelse(currData$predicted_prob > 0.5, "Yes", "No")
confusion_matrix <- confusionMatrix(
as.factor(predicted_classes),
as.factor(currData$MHealthConcern)
)
print(confusion_matrix)
logistic_model <- glm(
# MHealthConcern ~ SC_RACE_R + sex_22 + SC_AGE_YEARS
MHealthConcern ~ sex_22,
data = currData,
family = binomial()
)
summary(logistic_model)
library(broom)
# Tidy output with odds ratios and confidence intervals
tidy_model <- tidy(logistic_model, conf.int = TRUE, exponentiate = TRUE)
print(tidy_model)
library(pscl)
pR2 <- pR2(logistic_model)
print(pR2)
# Model fit assessment
# Likelihood Ratio Test
anova(logistic_model, test = "LRT")
# Check for multicollinearity
library(car)
vif_values <- vif(logistic_model)
ggplot(currData, aes(x = sex_22, fill = MHealthConcern)) +
geom_bar(position = "fill") +
labs(title = "Mental Health Concerns by Sex",
x = "Sex",
y = "Proportion",
fill = "Mental Health Concern") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal() +
scale_fill_brewer(palette = "Set2")
currentFilter <- c("K2Q33A", "K2Q32A", "SC_RACE_R", "sex_22", "SC_AGE_YEARS", "age3_22")
currData <- filteredData[, currentFilter]
currData$SC_RACE_R <- as.factor(currData$SC_RACE_R)
currData$sex_22 <- as.factor(currData$sex_22)
currData$MHealthConcern <- factor(
ifelse(currData$K2Q33A == 1 | currData$K2Q32A == 1, "Yes", "No"),
levels = c("No", "Yes"))
currData <- currData %>% filter(age3_22 == 3)
currData$sex_22 <- factor(currData$sex_22,
levels = c(1, 2),
labels = c("Male",
"Female"))
ggplot(currData, aes(x = sex_22, fill = MHealthConcern)) +
geom_bar(position = "fill") +
labs(title = "Mental Health Concerns by Sex",
x = "Sex",
y = "Proportion",
fill = "Mental Health Concern") +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal() +
scale_fill_brewer(palette = "Set2")
perform_chi_square <- function(data, depression_var, activity_var) {
# Create contingency table
cont_table <- table(data[[depression_var]], data[[activity_var]])
# Perform chi-square test
chi_test <- chisq.test(cont_table)
# Print results
cat("Chi-Square Test for", depression_var, "and", activity_var, "\n")
cat("Contingency Table:\n")
print(cont_table)
cat("\nChi-Square Results:\n")
print(chi_test)
cat("\nEffect Size (Cramer's V):\n")
# Calculate Cramer's V for effect size
cramer_v <- sqrt(chi_test$statistic /
(length(data[[depression_var]]) *
(min(dim(cont_table)) - 1)))
print(cramer_v)
cat("\n---\n")
}
# List of activity variables to test
activity_vars <- c(
"PHYSACTIV",      # Physical activity
"SCREENTIME",     # Screen time
"OUTDOORSWKDAY",  # Weekday outdoor time
"OUTDOORSWKEND",  # Weekend outdoor time
"K7Q31",          # Clubs or Organizations
"K7Q32",          # Organized Activities
"AftSchAct_22"    # After-school activities indicator
)
# Perform chi-square tests
for (var in activity_vars) {
perform_chi_square(filteredData, "depress_22", var)
}
# Perform chi-square tests
for (var in activity_vars) {
perform_chi_square(filteredData %>% filter(age3_22 == 3), "depress_22", var)
}
temp <- filteredData %>% filter(age3_22 == 3)
p_values <- sapply(activity_vars, function(var) {
cont_table <- table(temp$depress_22, temp[[var]])
chisq.test(cont_table)$p.value
})
# Bonferroni corrected p-values
bonferroni_p <- p.adjust(p_values, method = "bonferroni")
print("Bonferroni Corrected P-values:")
print(bonferroni_p)
activityData <- filteredData %>% filter(age3_22 == 3)
activityData$MHealthConcern <- factor(
ifelse(activityData$K2Q33B == 1 | activityData$K2Q32B == 1, "Yes", "No"),
levels = c("No", "Yes")
)
formula <- "MHealthConcern ~ PHYSACTIV + SCREENTIME + OUTDOORSWKDAY + OUTDOORSWKEND +
K7Q31 + K7Q32 + AftSchAct_22 + sports_22 + volunteer_22"
model <- glm(formula,
data = activityData,
family = binomial(link = "logit"))
# Tidy model results
tidy_results <- tidy(model, conf.int = TRUE, exponentiate = TRUE)
# Print model summary
cat("Logistic Regression Model Summary:\n")
print(summary(model))
# Print tidy results (odds ratios with confidence intervals)
cat("\nOdds Ratios and Confidence Intervals:\n")
print(tidy_results)
activityData <- filteredData %>% filter(age3_22 == 3)
activityData$MHealthConcern <- factor(
ifelse(activityData$K2Q33B == 1 | activityData$K2Q32B == 1, "Yes", "No"),
levels = c("No", "Yes")
)
formula <- "MHealthConcern ~ PHYSACTIV + SCREENTIME + OUTDOORSWKDAY + OUTDOORSWKEND +
K7Q31 + K7Q32 + AftSchAct_22 + sports_22 + volunteer_22"
# Run ordinal logistic regression
model <- polr(formula,
data = activityData,
Hess = TRUE)  # Hess=TRUE computes standard errors
library(ggplot2)
library(dplyr)
library(tidyr)
library(MASS)
activityData <- filteredData %>% filter(age3_22 == 3)
activityData$MHealthConcern <- factor(
ifelse(activityData$K2Q33B == 1 | activityData$K2Q32B == 1, "Yes", "No"),
levels = c("No", "Yes")
)
formula <- "MHealthConcern ~ PHYSACTIV + SCREENTIME + OUTDOORSWKDAY + OUTDOORSWKEND +
K7Q31 + K7Q32 + AftSchAct_22 + sports_22 + volunteer_22"
# Run ordinal logistic regression
model <- polr(formula,
data = activityData,
Hess = TRUE)  # Hess=TRUE computes standard errors
formula <- "K2Q33C ~ PHYSACTIV + SCREENTIME + OUTDOORSWKDAY + OUTDOORSWKEND +
K7Q31 + K7Q32 + AftSchAct_22 + sports_22 + volunteer_22"
# Run ordinal logistic regression
model <- polr(formula,
data = activityData,
Hess = TRUE)  # Hess=TRUE computes standard errors
activtyData$K2Q33C <- as.factor(activtyData$K2Q33C)
activityData <- filteredData %>% filter(age3_22 == 3)
activityData$MHealthConcern <- factor(
ifelse(activityData$K2Q33B == 1 | activityData$K2Q32B == 1, "Yes", "No"),
levels = c("No", "Yes")
)
activtyData$K2Q33C <- as.factor(activtyData$K2Q33C)
activityData <- filteredData %>% filter(age3_22 == 3)
activityData$MHealthConcern <- factor(
ifelse(activityData$K2Q33B == 1 | activityData$K2Q32B == 1, "Yes", "No"),
levels = c("No", "Yes")
)
activityData$K2Q33C <- as.factor(activityData$K2Q33C)
formula <- "K2Q33C ~ PHYSACTIV + SCREENTIME + OUTDOORSWKDAY + OUTDOORSWKEND +
K7Q31 + K7Q32 + AftSchAct_22 + sports_22 + volunteer_22"
# Run ordinal logistic regression
model <- polr(formula,
data = activityData,
Hess = TRUE)  # Hess=TRUE computes standard errors
# Compute p-values
coef_table <- coef(summary(model))
p_values <- pnorm(abs(coef_table[, "t value"]), lower.tail = FALSE) * 2
# Combine coefficient table with p-values
results_table <- cbind(coef_table, "p.value" = p_values)
# Print model summary
cat("Ordinal Logistic Regression Results for", outcome_var, "\n")
# Run ordinal logistic regression
model <- polr(formula,
data = activityData,
Hess = TRUE)  # Hess=TRUE computes standard errors
# Compute p-values
coef_table <- coef(summary(model))
p_values <- pnorm(abs(coef_table[, "t value"]), lower.tail = FALSE) * 2
# Combine coefficient table with p-values
results_table <- cbind(coef_table, "p.value" = p_values)
# Print model summary
cat("Ordinal Logistic Regression Results for", K2Q33C, "\n")
formula <- "K2Q33C ~ PHYSACTIV + SCREENTIME + OUTDOORSWKDAY + OUTDOORSWKEND +
K7Q31 + K7Q32 + AftSchAct_22 + sports_22 + volunteer_22"
# Run ordinal logistic regression
model <- polr(formula,
data = activityData,
Hess = TRUE)  # Hess=TRUE computes standard errors
# Compute p-values
coef_table <- coef(summary(model))
p_values <- pnorm(abs(coef_table[, "t value"]), lower.tail = FALSE) * 2
# Combine coefficient table with p-values
results_table <- cbind(coef_table, "p.value" = p_values)
# Print model summary
cat("Ordinal Logistic Regression Results for", activityData$K2Q33C, "\n")
print(results_table)
# Odds ratios with confidence intervals
cat("\nOdds Ratios and Confidence Intervals:\n")
odds_ratios <- exp(cbind(OR = coef(model),
confint(model)))
formula <- "K2Q33C ~ PHYSACTIV + SCREENTIME + OUTDOORSWKDAY + OUTDOORSWKEND +
K7Q31 + K7Q32 + AftSchAct_22 + sports_22 + volunteer_22"
# Run ordinal logistic regression
model <- polr(formula,
data = activityData,
Hess = TRUE)  # Hess=TRUE computes standard errors
# Compute p-values
coef_table <- coef(summary(model))
p_values <- pnorm(abs(coef_table[, "t value"]), lower.tail = FALSE) * 2
# Combine coefficient table with p-values
results_table <- cbind(coef_table, "p.value" = p_values)
# Print model summary
cat("Ordinal Logistic Regression Results for", activityData$K2Q33C, "\n")
#print(results_table)
# Odds ratios with confidence intervals
cat("\nOdds Ratios and Confidence Intervals:\n")
odds_ratios <- exp(cbind(OR = coef(model),
confint(model)))
formula <- "K2Q33C ~ PHYSACTIV + SCREENTIME + OUTDOORSWKDAY + OUTDOORSWKEND +
K7Q31 + K7Q32 + AftSchAct_22 + sports_22 + volunteer_22"
# Run ordinal logistic regression
model <- polr(formula,
data = activityData,
Hess = TRUE)  # Hess=TRUE computes standard errors
# Compute p-values
coef_table <- coef(summary(model))
p_values <- pnorm(abs(coef_table[, "t value"]), lower.tail = FALSE) * 2
# Combine coefficient table with p-values
results_table <- cbind(coef_table, "p.value" = p_values)
# Print model summary
#cat("Ordinal Logistic Regression Results for", activityData$K2Q33C, "\n")
#print(results_table)
# Odds ratios with confidence intervals
cat("\nOdds Ratios and Confidence Intervals:\n")
odds_ratios <- exp(cbind(OR = coef(model),
confint(model)))
# Full proportional odds model
full_model <- clm(formula, data = activityData)
install.packages("ordinal")
library(ordinal)
# Full proportional odds model
full_model <- clm(formula, data = activityData)
# Partial proportional odds model
partial_model <- clm(formula, data = activityData,
nominal = ~ PHYSACTIV + SCREENTIME)  # Allow some predictors to vary across thresholds
# Likelihood ratio test
lr_test <- anova(full_model, partial_model)
p_values <- pnorm(abs(coef_table[, "t value"]), lower.tail = FALSE) * 2
print(lr_test)
